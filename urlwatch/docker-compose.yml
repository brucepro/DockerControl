services:
  urlwatch:
    image: urlwatch/urlwatch:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - URLWATCH_CONFIG_DIR=/data
      - URLWATCH_CACHE_DIR=/data/cache
      - URLWATCH_REPORTS_DIR=/data/reports
      - URLWATCH_WEB_SERVER_HOST=0.0.0.0
      - URLWATCH_WEB_SERVER_PORT=8080
      - URLWATCH_WEB_SERVER_BASE_URL=http://localhost:8080
      - URLWATCH_DATABASE_URL=sqlite:////data/urlwatch.db
      - URLWATCH_SMTP_SERVER=smtp.gmail.com
      - URLWATCH_SMTP_PORT=587
      - URLWATCH_SMTP_USER=your-email@gmail.com
      - URLWATCH_SMTP_PASSWORD=your-app-password
      - URLWATCH_SMTP_FROM=your-email@gmail.com
      - URLWATCH_SMTP_TO=recipient@example.com
    volumes:
      - ./urlwatch-data:/data
      - ./urlwatch-config:/config
    working_dir: /config
    command: >
      urlwatch
      --config /config/urlwatch.yaml
      --urls /config/urls.yaml
      --hooks /config/hooks.py
      --cache /data/cache
      --database /data/urlwatch.db
      --web-server
      --web-server-host 0.0.0.0
      --web-server-port 8080
    networks:
      - urlwatch_network

  # Alternative: Simple website monitoring with screenshots
  website-monitor:
    image: dperson/urlwatch:latest
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - TZ=UTC
      - PUID=1000
      - PGID=1000
    volumes:
      - ./website-monitor-data:/data
      - ./website-monitor-config:/config
    command: >
      urlwatch
      --config /config/urlwatch.yaml
      --urls /config/urls.yaml
      --cache /data/cache
      --database /data/urlwatch.db
      --web-server
      --web-server-host 0.0.0.0
      --web-server-port 8080
    networks:
      - urlwatch_network

  # Screenshot service for visual change detection
  screenshot-service:
    image: selenium/standalone-chrome:latest
    restart: unless-stopped
    ports:
      - "4444:4444"
      - "7900:7900"
    environment:
      - SE_NODE_MAX_SESSIONS=4
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_VNC_NO_PASSWORD=1
      - SE_VNC_VIEW_ONLY=0
    volumes:
      - /dev/shm:/dev/shm
    shm_size: 2gb
    networks:
      - urlwatch_network

  # Notification service (optional)
  notification-service:
    image: node:18-alpine
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DISCORD_WEBHOOK_URL=your-discord-webhook-url
      - SLACK_WEBHOOK_URL=your-slack-webhook-url
      - TELEGRAM_BOT_TOKEN=your-telegram-bot-token
      - TELEGRAM_CHAT_ID=your-telegram-chat-id
    volumes:
      - ./notification-service:/app
    working_dir: /app
    command: >
      sh -c "
        npm install &&
        npm start
      "
    networks:
      - urlwatch_network

volumes:
  urlwatch_data:
  screenshot_data:

networks:
  urlwatch_network: 
